# a = {"A":[["B", 3], ["C", 5], ["D", 11]],
#      "B": [["A", 3], ["C", 8], ["D", 5]],
#      "C": [["A", 5], ["B", 8]],
#      "D" : [["A", 11], ["B", 5]]}
import time
def o_gr(graf, max_t, x,  t_n= 0, past = [], ob_p = []):#сам граф - graf\ лимит по времени - max_t\ начало графа - x
    #время на путь - t_n \пройденый путь на данный момент - past\ обязательные точки - ob_p
    if past == []:
        roud = []
        v = graf[x]
        past.append(x)
        for i in range(len(v)):
            if v[i][0] not in past and t_n + v[i][1] <= max_t:
                a = o_gr(graf, max_t, x, t_n+v[i][1], past+[v[i][0]], ob_p)
                roud += [*a]
        return sorted(roud, key= lambda x:len(list(set(x[0]))))[::-1][:5]
    else:
        pu = []
        v = graf[past[-1]]
        t = True
        for i in range(len(ob_p)):
            if ob_p[i] not in past:
                t = False
        if t:
            pu.append([past, t_n])
        for i in range(len(v)):
            if v[i][0] not in past and t_n + v[i][1] <= max_t:
                a = o_gr(graf, max_t, x, t_n + v[i][1], past+ [v[i][0]], ob_p)
                pu+=[*a]
        return sorted(pu, key= lambda x:len(list(set(x[0]))))[::-1][:5]


points = [
    "55.826591, 37.638033",
    "55.828598, 37.633872",
    "55.828660, 37.631427",
    "55.828794, 37.629733",
    "55.829620, 37.629884",
    "55.830239, 37.629268",
    "55.829970, 37.633791",
    "55.830684, 37.633393",
    "55.830932, 37.632602",
    "55.832645, 37.627215",
    "55.830853, 37.638237",
    "55.833371, 37.634525",
    "55.833840, 37.626198",
    "55.834870, 37.622146",
    "55.834312, 37.621751",
    "55.834919, 37.619728",
    "55.834872, 37.618655",
    "55.835751, 37.618203",
    "55.833743, 37.619619",
    "55.832246, 37.616529",
    "55.831419, 37.623967",
    "55.832016, 37.623054",
    "55.835031, 37.623354",
    "55.834418, 37.630189",
    "55.837183, 37.621347",
    "55.837271, 37.624137",
    "55.837340, 37.622524",
    "55.838276, 37.623398",
    "55.838423, 37.614388",
    "55.839378, 37.616988",
    "55.839842, 37.619280",
    "55.839657, 37.621512",
    "55.838345, 37.628216",
    "55.832802, 37.629093",
    "55.835137, 37.627619",
    "55.826249, 37.637578",
    "55.833797, 37.623099",
    "55.834308, 37.623085"
]

c = []
d= []
s = {}
with open("f") as f:
    a = f.read().split("\n")
    for i in range(len(a)):
        if "Route" in a[i]:
            b = a[i+1].split()
            x = b[1] + " "+ b[2]
            y = b[3] + " " + b[4]
            t = int(a[i].split()[4][:-1])
            if x not in s and x!= y:
                s[x] = [[y, t]]
            else:
                if x!= y:
                    per= s[x]
                    tr = True
                    for i in range(len(per)):
                        if per[i][0] == y:
                            per[i][1] = min(per[i][1], t)
                            tr = False
                            break
                    if tr:
                        per.append([y, t])
                    s[x] = per
tn = time.time()
print(o_gr(s, 100, "55.826591, 37.638033"))
print(time.time()-tn)